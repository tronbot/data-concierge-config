spring:
    cloud:
        stream:
            kafka:
                binder:
                    brokers: chp-bmboagt01:9092
                    zk-nodes: chp-bmboagt01:2181
    jackson:
        serialization.write_dates_as_timestamps: false
    jpa:
        open-in-view: false
        hibernate:
            ddl-auto: none
            naming:
                physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
                implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy

server:
    session:
        cookie:
            http-only: true

security:
    basic:
        enabled: false


eureka:
    instance:
        appname: ${spring.application.name}
        instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
        statusPageUrlPath: ${management.context-path}/info
        healthCheckUrlPath: ${management.context-path}/health
ribbon:
    eureka:
        enabled: true
zuul:
    host:
        connect-timeout-millis: 5000
        socket-timeout-millis: 10000

# See https://github.com/Netflix/Hystrix/wiki/Configuration
hystrix:
    command:
        default:
            execution:
                isolation:
                    thread:
                        timeoutInMilliseconds: 10000

management:
    context-path: /management
    health:
        mail:
            enabled: false # When using the MailService, configure an SMTP server and set this to true
        binders:
            enabled: true
            
            
logging:
    level:
        ROOT: INFO
        io.tronbot: DEBUG
        io.tronbot.dc.common.json: INFO
        
data-concierge: 
    async:
        core-pool-size: 2
        max-pool-size: 50
        queue-capacity: 100000
    cache:
        hazelcast: 
            port: 5701
            backup-Count: 1
            write-batch-size: 10000
            write-delay: 60
            time-to-live-seconds: 12004800
            
  

##logging
#logging.level.io.tronbot=DEBUG
#
#
##disable security
#management.security.enabled=false
#security.basic.enabled=false
#
#
#
#
## disable JMX 
#endpoints.jmx.enabled=false
#spring.jmx.enabled=false
#
#
#debug=true
#spring.sleuth.sampler.percentage=1.0
#
#info.id=${spring.application.name}
#
##server.port=${PORT:0}
#
##logging.level.org.springframework.security=DEBUG
##logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([trace=%X{X-Trace-Id:-},span=%X{X-Span-Id:-}]){yellow} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wex
#
#spring.sleuth.log.json.enabled=true
#
##spring.zipkin.host=${DOCKER_IP}
#
##spring.cloud.consul.host=${DOCKER_IP}
##spring.cloud.consul.discovery.hostname=${DOCKER_HOST_IP:cna}
#
#logging.level.com.netflix.eureka=OFF
#logging.level.com.netflix.discovery=OFF
#
#
##spring.rabbitmq.host=${DOCKER_IP}
##spring.redis.host=${DOCKER_IP}
#
##spring.zipkin.base-url=http://${DOCKER_IP}:9411
##spring.zipkin.base-url=http://127.0.0.1:9411
#
#
#
#
#
#endpoints.shutdown.enabled=true
#
#spring.jpa.generate-ddl=true
#
#
##eureka.instance.hostname=${vcap.application.uris[0]:localhost}
##eureka.instance.nonSecurePort=80
#
#
#endpoints.shutdown.enabled=true
#
#spring.jpa.generate-ddl=true
#
#
#
#
#spring.cloud.stream.bindings.input.content-type=application/json
#spring.cloud.stream.kafka.binder.brokers=chp-bmboagt01:9092
#spring.cloud.stream.kafka.binder.zkNodes=chp-bmboagt01:2181

